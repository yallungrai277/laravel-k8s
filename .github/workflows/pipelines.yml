name: Pipelines

on:
  push:
    branches: ['*']

jobs:
  pipelines:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.11.4
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: 'laravel-k8s_test'
          MYSQL_ROOT_PASSWORD: 'root_in'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:6.0.20-alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: vendor
        key: composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          composer-

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Install composer dependencies
      run: |
        composer install --no-scripts

    - name: Analyze code
      run: ./vendor/bin/phpstan analyse --memory-limit=1G

    - name: Coding standards
      run: ./vendor/bin/pint --test

    - name: Prepare app
      run: |
        mv .env.ci .env
        php artisan key:generate

    - name: Set directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Symlink storage
      run: php artisan storage:link

    # Donot cache config as, CI will not find mysql instance.
    - name: Reset cache
      run: |
        php artisan cache:clear
        php artisan route:cache
        php artisan event:cache

    - name: Unit test
      run: php artisan test --testsuite=Unit

    - name: Feature test
      run: php artisan test --testsuite=Feature

    - name: Install NPM dependencies
      run: npm install

    - name: Compile assets
      run: npm run build
      # Todo cache and run cypress tests.


  publish_to_container_registry:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [pipelines]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to GCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_PAT }} # Personal access token

    - name: Push to github container registry
      env:
        USERNAME: ${{ secrets.GHCR_USERNAME }}
        IMAGE_BASE_NAME: laravel-k8s
      # Todo add a unique tag instead of latest.
      run: |
        docker build . --target cli -t ghcr.io/${{ env.USERNAME }}/${{ env.IMAGE_BASE_NAME }}-cli:latest && docker push ghcr.io/${{ env.USERNAME }}/${{ env.IMAGE_BASE_NAME }}-cli:latest
        docker build . --target app -t ghcr.io/${{ env.USERNAME }}/${{ env.IMAGE_BASE_NAME }}-app:latest && docker push ghcr.io/${{ env.USERNAME }}/${{ env.IMAGE_BASE_NAME }}-app:latest
        docker build . --target web -t ghcr.io/${{ env.USERNAME }}/${{ env.IMAGE_BASE_NAME }}-nginx:latest && docker push ghcr.io/${{ env.USERNAME }}/${{ env.IMAGE_BASE_NAME }}-nginx:latest
